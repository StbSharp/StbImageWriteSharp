using Hebron.Roslyn;
using Microsoft.CodeAnalysis;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace StbSharp.StbImage.Generator
{
	class Program
	{
		private static string Write<T>(Dictionary<string, T> input) where T : SyntaxNode
		{
			var keys = (from string k in input.Keys select k).ToArray();
			var result = string.Empty;
			foreach (var key in keys)
			{
				using (var sw = new StringWriter())
				{
					input[key].NormalizeWhitespace().WriteTo(sw);

					result += sw.ToString();
					result += Environment.NewLine;
				}

			}

			return result;
		}

		static void Process()
		{
			var parameters = new RoslynConversionParameters
			{
				InputPath = @"stb_image_write.h",
				Defines = new[]
				{
					"STB_IMAGE_WRITE_IMPLEMENTATION",
					"STB_IMAGE_WRITE_STATIC"
				},
				SkipStructs = new string[]
				{
				},
				SkipGlobalVariables = new string[]
				{
				},
				SkipFunctions = new[]
				{
					"stbiw__writefv",
					"stbiw__writef",
					"stbiw__outfile",
				},
				Classes = new string[]
				{
				},
			};

			var result = RoslynCodeConverter.Convert(parameters);

			// Write output
			var sb = new StringBuilder();
			sb.AppendLine(string.Format("// Generated by Sichem at {0}", DateTime.Now));
			sb.AppendLine();

			sb.AppendLine("using System;");
			sb.AppendLine("using System.Runtime.InteropServices;");

			sb.AppendLine();

			sb.Append("namespace StbImageWriteSharp\n{\n\t");
			sb.AppendLine("unsafe partial class StbImageWrite\n\t{");

			sb.Append(Write(result.NamedEnums));
			sb.Append(Write(result.UnnamedEnumValues));
			sb.Append(Write(result.GlobalVariables));
			sb.Append(Write(result.Delegates));
			sb.Append(Write(result.Structs));
			sb.Append(Write(result.Functions));

			sb.Append("}\n}");
			var data = sb.ToString();

			// Post processing

			File.WriteAllText(@"..\..\..\..\..\..\src\StbImageWrite.Generated.cs", data);
		}

		static void Main(string[] args)
		{
			try
			{
				Process();
			}
			catch (Exception ex)
			{
				Console.WriteLine(ex.Message);
				Console.WriteLine(ex.StackTrace);
			}

			Console.WriteLine("Finished. Press any key to quit.");
			Console.ReadKey();
		}
	}
}